spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

server.port=8080

spring.application.name=accounts
spring.profiles.active=prod
spring.config.import=optional:configserver:http://localhost:8071/

management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

## Configuring info endpoint
info.app.name=Accounts Microservice
info.app.description=Eazy Bank Accounts Application
info.app.version=1.0.0

endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true
## register resilience4j to acctuater all this prop can be left to default values
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
## prop for the @CircuitBreaker(name = "detailsForCustomerSupportApp" numer to decicde to open the circuit is 5 
# => 5 request not success so open the circuit 
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.minimumNumberOfCalls= 5
## if 50% of 5 requests fail the circuit will open
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.failureRateThreshold= 50
## half open state
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.waitDurationInOpenState= 30000
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.permittedNumberOfCallsInHalfOpenState=2

## prop for the  @Retry pattern
resilience4j.retry.configs.default.registerHealthIndicator= true
# number of retry
resilience4j.retry.instances.retryForCustomerDetails.maxRetryAttempts=3
# time between retry
resilience4j.retry.instances.retryForCustomerDetails.waitDuration=2000

## prop for the  @ratelimiter pattern
resilience4j.ratelimiter.configs.default.registerHealthIndicator= true
## prop for the  @ratelimiter pattern
#calculate number of requested have proccesdd
resilience4j.ratelimiter.instances.sayHello.timeoutDuration=5000
#number of requests for specific period
resilience4j.ratelimiter.instances.sayHello.limitRefreshPeriod=5000
#number of requests for specific period
resilience4j.ratelimiter.instances.sayHello.limitForPeriod=1

spring.sleuth.sampler.percentage=1
spring.zipkin.baseUrl=http://localhost:9411/
#spring.zipkin.sender.type=rabbit
#spring.zipkin.rabbitmq.queue=zipkin
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
